'solc --version' running
'solc ext_changed.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/home/harry/Documents/call_reducer/Solidity/smart4/PersesTempRoot_ext_changed.sol_solidity2.sh_20240709_181554_00/000062' running
Compilation warnings/errors on ext_changed.sol:
ext_changed.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.21;"
library SafeMath {
^ (Relevant source part starts here and spans across multiple lines).
ext_changed.sol:12:51: Error: Identifier not found or not unique.
    function approveAndCall(                      tokens            ) public            returns (bool success)
                                                  ^----^

Traceback (most recent call last):
  File "/home/harry/.local/lib/python3.8/site-packages/crytic_compile/platform/solc.py", line 582, in _run_solc
    ret: Dict = json.loads(stdout)
  File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/harry/.local/bin/slither", line 8, in <module>
    sys.exit(main())
  File "/home/harry/.local/lib/python3.8/site-packages/slither/__main__.py", line 727, in main
    main_impl(all_detector_classes=detectors, all_printer_classes=printers)
  File "/home/harry/.local/lib/python3.8/site-packages/slither/__main__.py", line 833, in main_impl
    ) = process_all(filename, args, detector_classes, printer_classes)
  File "/home/harry/.local/lib/python3.8/site-packages/slither/__main__.py", line 96, in process_all
    compilations = compile_all(target, **vars(args))
  File "/home/harry/.local/lib/python3.8/site-packages/crytic_compile/crytic_compile.py", line 718, in compile_all
    compilations.append(CryticCompile(target, **kwargs))
  File "/home/harry/.local/lib/python3.8/site-packages/crytic_compile/crytic_compile.py", line 207, in __init__
    self._compile(**kwargs)
  File "/home/harry/.local/lib/python3.8/site-packages/crytic_compile/crytic_compile.py", line 629, in _compile
    self._platform.compile(self, **kwargs)
  File "/home/harry/.local/lib/python3.8/site-packages/crytic_compile/platform/solc.py", line 151, in compile
    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)
  File "/home/harry/.local/lib/python3.8/site-packages/crytic_compile/platform/solc.py", line 280, in _get_targets_json
    return _run_solc(
  File "/home/harry/.local/lib/python3.8/site-packages/crytic_compile/platform/solc.py", line 586, in _run_solc
    raise InvalidCompilation(f"Invalid solc compilation {stderr}")
crytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation ext_changed.sol:1:1: Warning: Source file does not specify required compiler version!Consider adding "pragma solidity ^0.4.21;"
library SafeMath {
^ (Relevant source part starts here and spans across multiple lines).
ext_changed.sol:12:51: Error: Identifier not found or not unique.
    function approveAndCall(                      tokens            ) public            returns (bool success)
                                                  ^----^

